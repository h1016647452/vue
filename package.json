/*
项目的npm配置文件
package.json 是npm init命令初始化后，在项目的根目录下自动生成的配置文件，它定义了这个项目的配置信息以及所需要的各种模块，
执行npm install命令，应用会自动下载所需的模块。
*/
{
  "name": "vue", // 项目名称
  "version": "2.5.17-beta.0", // 项目版本
  "description": "Reactive, component-oriented view layer for modern web interfaces.",
  "main": "dist/vue.runtime.common.js", // 应用加载的主入口文件
  // main表示的含义：如果你的模块被命名为foo，用户安装了这个模块并通过require("foo")来使用这个模块，那么require返回的内容就是main属性指定的文件中 module.exports指向的对象。
  // 它应该指向模块根目录下的一个文件。对大对数模块而言，这个属性更多的是让模块有一个主入口文件，然而很多模块并不写这个属性
  "module": "dist/vue.runtime.esm.js",
  "unpkg": "dist/vue.js",
  "jsdelivr": "dist/vue.js",
  "typings": "types/index.d.ts",
  "files": [ 
    "src",
    "dist/*.js",
    "types/*.d.ts"
  ],
  // "files"属性的值是一个数组，内容是模块下文件名或者文件夹名，
  // 如果是文件夹名，则文件夹下所有的文件也会被包含进来（除非文件被另一些配置排除了）
  "sideEffects": false,
  "scripts": { // 指定了运行npm run脚本命令的缩写。比如 npm run dev
    "dev": "rollup -w -c scripts/config.js --environment TARGET:web-full-dev",
    "dev:cjs": "rollup -w -c scripts/config.js --environment TARGET:web-runtime-cjs",
    "dev:esm": "rollup -w -c scripts/config.js --environment TARGET:web-runtime-esm",
    "dev:test": "karma start test/unit/karma.dev.config.js",
    "dev:ssr": "rollup -w -c scripts/config.js --environment TARGET:web-server-renderer",
    "dev:compiler": "rollup -w -c scripts/config.js --environment TARGET:web-compiler ",
    "dev:weex": "rollup -w -c scripts/config.js --environment TARGET:weex-framework",
    "dev:weex:factory": "rollup -w -c scripts/config.js --environment TARGET:weex-factory",
    "dev:weex:compiler": "rollup -w -c scripts/config.js --environment TARGET:weex-compiler ",
    "build": "node scripts/build.js",
    "build:ssr": "npm run build -- web-runtime-cjs,web-server-renderer",
    "build:weex": "npm run build -- weex",
    "test": "npm run lint && flow check && npm run test:types && npm run test:cover && npm run test:e2e -- --env phantomjs && npm run test:ssr && npm run test:weex",
    "test:unit": "karma start test/unit/karma.unit.config.js",
    "test:cover": "karma start test/unit/karma.cover.config.js",
    "test:e2e": "npm run build -- web-full-prod,web-server-basic-renderer && node test/e2e/runner.js",
    "test:weex": "npm run build:weex && jasmine JASMINE_CONFIG_PATH=test/weex/jasmine.json",
    "test:ssr": "npm run build:ssr && jasmine JASMINE_CONFIG_PATH=test/ssr/jasmine.json",
    "test:sauce": "npm run sauce -- 0 && npm run sauce -- 1 && npm run sauce -- 2",
    "test:types": "tsc -p ./types/test/tsconfig.json",
    "lint": "eslint --fix src scripts test",
    "flow": "flow check",
    "sauce": "karma start test/unit/karma.sauce.config.js",
    "bench:ssr": "npm run build:ssr && node benchmarks/ssr/renderToString.js && node benchmarks/ssr/renderToStream.js",
    "release": "bash scripts/release.sh",
    "release:weex": "bash scripts/release-weex.sh",
    "release:note": "node scripts/gen-release-note.js",
    "commit": "git-cz"
  },
  "gitHooks": {
    "pre-commit": "lint-staged",
    "commit-msg": "node scripts/verify-commit-msg.js"
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "repository": { // 指定代码的存放位置。类似后台的maven仓库配置
    "type": "git",
    "url": "git+https://github.com/vuejs/vue.git"
  },
  // 字符串数组，方便别人搜索到本模块
  "keywords": [
    "vue"
  ],
  "author": "Evan You",
  "license": "MIT", // 项目模块指定的协议
  "bugs": { // 配置一个bug提交地址或者一个邮箱，其他人可以通过该url或邮箱提交bug和评论。npm bugs命令会使用这个url
    "url": "https://github.com/vuejs/vue/issues"
  },
  "homepage": "https://github.com/vuejs/vue#readme", // 项目主页url
  // 项目主页url和url属性不同，如果你填写了url属性，npm注册工具会认为你把项目发布到其他地方了，
  // 获取模块的时候不会从npm官方仓库获取，而是会重定向到url属性配置的地址
  "devDependencies": { // 应用开发所依赖的第三方模块（库）
    "@types/node": "^8.0.33",
    "@types/webpack": "^3.0.13",
    "acorn": "^5.2.1",
    "babel-core": "^6.25.0",
    "babel-eslint": "^8.0.3",
    "babel-helper-vue-jsx-merge-props": "^2.0.2",
    "babel-loader": "^7.0.0",
    "babel-plugin-istanbul": "^4.1.4",
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "babel-plugin-syntax-jsx": "^6.18.0",
    "babel-plugin-transform-vue-jsx": "^3.4.3",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-flow-vue": "^1.0.0",
    "buble": "^0.19.3",
    "chalk": "^2.3.0",
    "chromedriver": "^2.30.1",
    "codecov": "^3.0.0",
    "commitizen": "^2.9.6",
    "conventional-changelog": "^1.1.3",
    "cross-spawn": "^5.1.0",
    "cz-conventional-changelog": "^2.0.0",
    "de-indent": "^1.0.2",
    "es6-promise": "^4.1.0",
    "escodegen": "^1.8.1",
    "eslint": "^4.13.1",
    "eslint-loader": "^1.7.1",
    "eslint-plugin-flowtype": "^2.34.0",
    "eslint-plugin-jasmine": "^2.8.4",
    "eslint-plugin-vue-libs": "^2.0.1",
    "file-loader": "^1.1.5",
    "flow-bin": "^0.61.0",
    "hash-sum": "^1.0.2",
    "he": "^1.1.1",
    "http-server": "^0.11.1",
    "jasmine": "^2.99.0",
    "jasmine-core": "^2.99.0",
    "karma": "^2.0.0",
    "karma-chrome-launcher": "^2.1.1",
    "karma-coverage": "^1.1.1",
    "karma-firefox-launcher": "^1.0.1",
    "karma-jasmine": "^1.1.0",
    "karma-mocha-reporter": "^2.2.3",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-safari-launcher": "^1.0.0",
    "karma-sauce-launcher": "^1.1.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.3",
    "lint-staged": "^7.0.0",
    "lodash": "^4.17.4",
    "lodash.template": "^4.4.0",
    "lodash.uniq": "^4.5.0",
    "lru-cache": "^4.1.1",
    "nightwatch": "^0.9.16",
    "nightwatch-helpers": "^1.2.0",
    "phantomjs-prebuilt": "^2.1.14",
    "resolve": "^1.3.3",
    "rollup": "^0.54.1",
    "rollup-plugin-alias": "^1.3.1",
    "rollup-plugin-babel": "^3.0.2",
    "rollup-plugin-buble": "^0.19.2",
    "rollup-plugin-commonjs": "^8.0.0",
    "rollup-plugin-flow-no-whitespace": "^1.0.0",
    "rollup-plugin-node-resolve": "^3.0.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-watch": "^4.0.0",
    "selenium-server": "^2.53.1",
    "serialize-javascript": "^1.3.0",
    "shelljs": "^0.8.1",
    "typescript": "^2.7.1",
    "uglify-js": "^3.0.15",
    "webpack": "^3.11.0",
    "weex-js-runtime": "^0.23.6",
    "weex-styler": "^0.3.0",
    "yorkie": "^1.0.1"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
  // 用来设置一些项目不怎么变化的项目配置，例如port等。
  // 用户用的时候可以使用如下用法：
  // http.createServer(...).listen(process.env.npm_package_config_port) 
  // 若想修改config属性内容，则可通过npm config set [当前项目的name（即最前面配置的name属性）]:port 80来修改config。详见https://docs.npmjs.com/misc/config
}
